dt:25.01.2022

variable: 
     its used to store data in memory location(name given to memory location)
     A python variable is a reserved memory location to  store values(in otherwords variable in python program gives data to computer for processing)
     A variable is created at the moment we first assign a value to it
     the value stored in the variable can be changed during program execution
     all operation done on the variable effects the memory location
     
     standard:
       A variable should be usuable name(related to project or task)
       ex prg:
         # a integer assignment
            age = 30
         #a floating point
         salary =  1450.7
     print(age)
     print(salary)
     
     try to use camel case as much as possible for long variable
     camel case will is the pep standard,it removes all spaces and change the case of firstletter in small case and others in upper case
     Example:
     input: Welcome to python
     output in camel case:welcomeToPython
           
     rules for creating variable
     
        A variable must start with letter or(_)
        (ex)
        age = 25
       first_name = ahmed
       pint(first_name,'is',age,'years old)
        #o/p: ahmed is 25 years old
             
        a variable name caanot  start with a  no
          (Ex)
          
       # 5 apples=100 (cannot assign this method because its started with no)
       apples_5=100
       print("price of 5 apple is",apple_5)
       #o/P:price of 5 apple is 100
       
        a variable name can only contain alpha numeric characters and(_)
        
         ex prg:(addition of two no)
        number_1= 10
        number_2= 5
        sum = number_1+number_2
        print(sum)  
         #o/p:sum=15
         
        the variable name are case sensitive
        (ex)
        name = sathya
        Name = nikesh
        print(name)
       # output is sathya
        print(Name)
       # output is nikesh
       
        the reserved word(keyword) caanot be used a variable name
        #we cannot assign for it else true these word as a variable name
        
        
      differnce between compailer and interpreter:
      
            Interpreter
				                                                      Compiler
		
Translates program one statement at a time.         
				                                        Scans the entire program and translates it as a whole into machine code.	
Interpreters usually take less amount of time 
to analyze the source code.
However, the overall execution time is comparatively         Compilers usually take a large amount of time to analyze the source code.
                                                                However, the overall execution time is comparatively faster than interpreters.
		
slower than compailer				                          
No Object Code is generated, hence are memory efficient.    Generates Object Code which further requires linking, hence requires more memory. 
				                                         
Programming languages like JavaScript, Python.
				                                          Programming languages like C, C++, Java use compilers.
		
       
        compailer working method:
        
                   preprocessing                    processing
       SOURCE CODE-----------------> OBECT CODE---------------------->MACHINE
       
       interpeter working method:
       
        
                   preprocessing                          processing
       SOURCE CODE-----------------> INTERMEDIATE CODE---------------------->INTERPRETER
       
       
       KEYWORDS
  
        Keywords are predefined words given  by the interpreter
        each one has own identity and specific task
        there are 33 keywords in python
      rules:variable name should not match with keyword
  
  some reserved keywords are:
  
  
  True, False, None

    True: This keyword is used to represent a boolean true. If a statement is true, “True” is printed.
    
    False: This keyword is used to represent a boolean false. If a statement is false, “False” is printed. 
    
    None:  special constant used to denote a null value. 
    It’s important to remember, 0, any empty container(e.g empty list) does not compute to None. 
    It is an object of its datatype – NoneType. It is not possible to create multiple None objects 
    and can assign them to variables.

example:
  print(False == 0)
  print(True == 1)
  
   print(True + True + True)
  print(True + False + False)
  
  print(None == 0)
  print(None == [])

Output

True
True
3
1
False
False

ieration Keywords – for, while, break, continue

    for: This keyword is used to control flow and for looping.
      example:
      Using for loop
for i in range(10):
  
    print(i, end = " ")
          
     
    break: “break” is used to control the flow of the loop. The statement is used to break out of the loop and passes the
    control to the statement following immediately after loop.
    
     # break the loop as soon it sees 6
     example:
    if i == 6:
        break
   print()
    control to the statement following immediately after loop.
    
       while: Has a similar working like “for”, used to control flow and for looping.
    continue: “continue” is also used to control the flow of code. The keyword skips the current iteration of the loop but does not end the loop.

Example:
# loop from 1 to 10
i = 0
while i <10:
      
    # If i is equals to 6,
    # continue to next iteration
    # without printing
    if i == 6:
        i+= 1
        continue
    else:
        # otherwise print the value
        # of i
        print(i, end = " ")
          
    i += 1

  
Conditional keywords – if, else, elif

    if : It is a control statement for decision making. Truth expression forces control to go in “if” statement block.
    else : It is a control statement for decision making. False expression forces control to go in “else” statement block.
    elif : It is a control statement for decision making. It is short for “else if“

Example: if, else, and elif keyword

 i = 20
if (i == 10):
    print ("i is 10")
elif (i == 20):
    print ("i is 20")
else:
    print ("i is not present")
Output: i is 20

def
def keyword is used to declare user defined functions.
Example: def keyword

# def keyword
def fun(): #function declaration
    print("Inside Function")
      
fun()  #function call

Output: Inside Function

Return Keywords – Return, Yield

    return : This keyword is used to return from the function.
    yield : This keyword is used like return statement but is used to return a generator.
    
 yield                                                 return
provide output and continue                      provides output and stop
it gives back genrators output                   it gives actual returned output
it keeps state of local variable                 it destroys the state of local variable
it does not exit the function                     it exist the function

class

class keyword is used to declare user defined classes.
class is blue print of obect or template

Example: Class Keyword

With

with keyword is used to wrap the execution of block of code within methods defined by context manager.
.
Example: With Keyword

# using with statement
with open('file_path', 'w') as file:
    file.write('hello world !')
as

as keyword is used to create the alias for the module imported. ( giving a new name to the imported module)
E.g import math as mymath.
Example: as Keyword

import math as gfg
  
print(gfg.factorial(5))

Output:120

pass

pass is the null statement in python. Nothing happens when this is encountered.
This is used to prevent indentation errors and used as a placeholder.
Example: Pass Keyword

n = 10
for i in range(n):
      
# pass can be used as placeholder
pass


Lambda

Lambda keyword is used to make inline returning functions with no statements allowed internally. 

Example: Lambda Keyword

# Lambda keyword
g = lambda x: x*x*x
  
print(g(7))
Output

343

Import, From

    import : This statement is used to include a particular module into current program.
    from : Generally used with import, from is used to import particular 

# import keyword
import math
print(math.factorial(10))
 Output:3628800
 
# from keyword
from math import factorial
print(factorial(10))
Output:3628800










  
  
  DATA TYPE:  
       clasification or categorization of data.
       variable use to reserve some space 
       in memory representation of data(int,float,char)
         a type reprenst two things about a variable
         what type of data allowed to store
         how much memory is required to store a data
         
   types of data in python:
                                                         
              
          numeric                 dictionary    boolean     set      sequence type
          int,float,complex                                         string,list,tuple
               
            int:whole number may be negative or positive
            float:it is real number with floating pont representation(decimal number)
            complex:it has real part and imginary part(ex:2+3j)
            
             dictionary:diffrent types of meaning in particular words.we can add the words but cannot change existing one.
             (ex)a={1:'test',2:'prac')
             >>a[2] 
             o/p is prac
             
             boolean:it always check the condition and produce output true or false
             
             set: in python unordered collection of data that is iteratable..mutable and has no duplicate elements.
             its performs union intersection,diffrence
             Ex: a=set() 
             
             string:collection of one or more characters.anything between(' ' " " ) is represented as string.
             it has single line mutline representation.
             (Ex)
             a="char"
             b"10"
             c='m'
             
             list: which is ordered collection of data.its very flexible ,items in the list do not be in same type.
             represented in [] ,list is mutable.either we can test true or false
             ex
             list['10","c","python"]
             
             tuple: tuple is immutable,you cannot change ,add or remove the elements,it is a unique constraints.
             
             
 
  
 
       
       
       
      
        
        
        
        
        
        
